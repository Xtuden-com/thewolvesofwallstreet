from pandas import read_csv
import pandas as pd
# from matplotlib import pyplot
import matplotlib.pyplot as plt
from statsmodels.tsa.arima_model import ARIMA
import numpy as np
from sklearn.metrics import mean_squared_error
from statsmodels.tsa.seasonal import seasonal_decompose
from statsmodels.tsa.holtwinters import SimpleExpSmoothing
import math
import statsmodels.api as sm
import statsmodels
from statsmodels.tsa.api import ExponentialSmoothing, SimpleExpSmoothing, Holt

# data = [99.13499999999999, 99.13499999999999, 99.13499999999999, 99.13499999999999, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13,99.20500000000001, 99.20500000000001, 99.2, 99.24000000000001, 99.235, 99.235, 99.24, 99.235, 99.235, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225,99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225,99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22,99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.235, 99.235,99.225, 99.225, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.235, 99.235, 99.235, 99.235, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22, 99.22, 99.22, 99.22, 99.22,
# 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.235, 99.235, 99.235, 99.235, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.21000000000001, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.21000000000001,
# 99.235, 99.235, 99.235, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.21000000000001, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.21000000000001, 99.215, 99.215, 99.215, 99.215, 99.215, 99.215, 99.215, 99.21000000000001, 99.21000000000001, 99.21000000000001,
# 99.22, 99.22, 99.22, 99.21000000000001, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22, 99.21000000000001, 99.215, 99.215, 99.215, 99.215, 99.215, 99.215, 99.215, 99.21000000000001, 99.21000000000001, 99.21000000000001, 99.21000000000001, 99.215, 99.215, 99.215, 99.24000000000001, 99.235, 99.235, 99.22999999999999, 99.22999999999999, 99.22999999999999,
# 99.21000000000001, 99.215, 99.215, 99.215, 99.215, 99.215, 99.215, 99.215, 99.21000000000001, 99.21000000000001, 99.21000000000001, 99.21000000000001, 99.215, 99.215, 99.215, 99.24000000000001, 99.235, 99.235, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225,
# 99.21000000000001, 99.21000000000001, 99.215, 99.215, 99.215, 99.24000000000001, 99.235, 99.235, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225,
# 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.22999999999999, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225,
# 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225, 99.225]

# data = [99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315,
#         99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.315, 99.28, 99.28, 99.28, 99.28, 99.28, 99.31, 99.30000000000001, 99.30000000000001, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295, 99.295,
#         99.295, 99.295, 99.29499999999999, 99.29499999999999, 99.29499999999999, 99.29499999999999, 99.29499999999999, 99.29499999999999, 99.305, 99.32499999999999, 99.33, 99.33, 99.33, 99.33, 99.33, 99.33, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345, 99.345,
#         99.345, 99.345, 99.345, 99.345, 99.34, 99.34, 99.34, 99.34, 99.34, 99.34, 99.34, 99.34, 99.34, 99.34, 99.345, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35,
#         99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.36, 99.36, 99.36, 99.36, 99.36, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36,
#         99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36,
#         99.36, 99.36, 99.36, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.355, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37,
#         99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.37, 99.38499999999999, 99.38499999999999, 99.38499999999999, 99.38499999999999, 99.38499999999999, 99.38499999999999,
#         99.38499999999999, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.375, 99.36500000000001, 99.375, 99.335, 99.335, 99.335, 99.335, 99.335, 99.335, 99.335, 99.335, 99.34, 99.34, 99.34,
#         99.34, 99.35, 99.35, 99.35, 99.34, 99.335, 99.335, 99.335, 99.335, 99.335, 99.335, 99.335, 99.35499999999999, 99.34, 99.34, 99.355, 99.355, 99.365, 99.365, 99.36, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999,
#         99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.36, 99.36, 99.36, 99.36, 99.36, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35,
#         99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.36, 99.36, 99.36, 99.36]
data = [99.35, 99.35, 99.35, 99.365, 99.375, 99.375, 99.375, 99.38, 99.395, 99.4, 99.395, 99.395, 99.41499999999999,
        99.42, 99.41499999999999, 99.41499999999999, 99.41499999999999, 99.37, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32,
        99.32, 99.32, 99.32, 99.32, 99.32, 99.32,
        99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32,
        99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.32, 99.315,
        99.315, 99.32, 99.32, 99.32, 99.33000000000001, 99.33000000000001, 99.33000000000001, 99.32, 99.32, 99.32,
        99.32, 99.32, 99.325, 99.325, 99.325, 99.325, 99.325, 99.33500000000001, 99.33500000000001, 99.33500000000001,
        99.345, 99.345, 99.345, 99.345, 99.34, 99.34, 99.36, 99.36, 99.36500000000001, 99.36500000000001,
        99.36500000000001,
        99.36500000000001, 99.36500000000001, 99.36500000000001, 99.36500000000001, 99.36500000000001,
        99.36500000000001, 99.36500000000001, 99.36500000000001, 99.36500000000001, 99.36500000000001,
        99.36500000000001, 99.36500000000001, 99.36500000000001, 99.36500000000001, 99.36, 99.36500000000001,
        99.36500000000001, 99.38499999999999, 99.38499999999999, 99.38499999999999, 99.375, 99.375, 99.375, 99.395,
        99.39, 99.39500000000001, 99.39500000000001, 99.39500000000001, 99.39500000000001, 99.39500000000001, 99.4,
        99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.405, 99.405, 99.38, 99.38,
        99.39500000000001, 99.39500000000001, 99.39500000000001, 99.39500000000001, 99.39500000000001,
        99.39500000000001, 99.39500000000001, 99.39500000000001, 99.4, 99.4, 99.4, 99.41, 99.41, 99.41, 99.41,
        99.41, 99.41, 99.405, 99.405, 99.405, 99.405, 99.405, 99.405, 99.405, 99.405, 99.405, 99.405, 99.405, 99.405,
        99.405, 99.38, 99.38, 99.36, 99.355, 99.355, 99.355, 99.34, 99.34, 99.34, 99.34, 99.34, 99.295, 99.295, 99.315,
        99.32, 99.32,
        99.32, 99.32, 99.32, 99.32, 99.32, 99.315, 99.32, 99.32, 99.32499999999999, 99.33, 99.32499999999999,
        99.32499999999999, 99.32499999999999, 99.32499999999999, 99.335, 99.34, 99.34, 99.395, 99.36, 99.38499999999999,
        99.39, 99.38499999999999, 99.38499999999999, 99.38499999999999, 99.38, 99.38, 99.38, 99.38, 99.38, 99.38,
        99.38499999999999,
        99.38499999999999, 99.38499999999999, 99.37, 99.32, 99.295, 99.295, 99.27000000000001, 99.27000000000001,
        99.27000000000001, 99.285, 99.275, 99.27000000000001, 99.27000000000001, 99.27000000000001, 99.26, 99.26, 99.26,
        99.29499999999999, 99.3, 99.31, 99.31, 99.31, 99.31, 99.31, 99.31, 99.31, 99.31, 99.325, 99.32, 99.32, 99.32,
        99.32, 99.31, 99.32, 99.33, 99.33, 99.33, 99.31, 99.31, 99.31, 99.31, 99.305, 99.31, 99.315, 99.315, 99.31,
        99.31, 99.31, 99.305, 99.305, 99.305, 99.305, 99.305, 99.305, 99.3, 99.305, 99.305, 99.305, 99.305, 99.305,
        99.305, 99.305,
        99.305, 99.305, 99.3, 99.3, 99.285, 99.285, 99.3, 99.3, 99.3, 99.305, 99.305, 99.305, 99.33, 99.33, 99.36,
        99.36, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35, 99.35499999999999, 99.35499999999999,
        99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999, 99.35499999999999,
        99.35499999999999, 99.35499999999999, 99.35499999999999, 99.36500000000001, 99.36500000000001,
        99.36500000000001, 99.36500000000001, 99.375, 99.38, 99.39, 99.39, 99.39, 99.39, 99.39500000000001, 99.405,
        99.405, 99.405, 99.435, 99.445, 99.44, 99.435, 99.44999999999999, 99.44999999999999, 99.44999999999999, 99.455,
        99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001,
        99.46000000000001,
        99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001,
        99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001,
        99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001, 99.46000000000001,
        99.45500000000001, 99.45500000000001, 99.45500000000001, 99.45500000000001, 99.45, 99.45, 99.465, 99.5, 99.5,
        99.5, 99.5, 99.5, 99.5, 99.5, 99.5, 99.5,
        99.5, 99.5, 99.455, 99.455, 99.455, 99.46000000000001, 99.475, 99.475, 99.475, 99.475, 99.475, 99.475, 99.485,
        99.49, 99.49, 99.495, 99.5, 99.52000000000001, 99.53, 99.515, 99.515, 99.52, 99.52, 99.52, 99.52, 99.52, 99.515,
        99.555, 99.55, 99.555, 99.555,
        99.555, 99.565, 99.57, 99.57, 99.57, 99.57, 99.57, 99.57, 99.53999999999999, 99.53999999999999, 99.545, 99.545,
        99.545, 99.56, 99.555, 99.555, 99.555, 99.555, 99.555, 99.555, 99.555, 99.555, 99.555, 99.555,
        99.54499999999999, 99.47, 99.465, 99.48, 99.48, 99.48, 99.515,
        99.515, 99.515, 99.525, 99.52, 99.52, 99.52, 99.52, 99.52, 99.52, 99.52, 99.52, 99.52, 99.52, 99.52, 99.52,
        99.49000000000001, 99.46000000000001, 99.455, 99.44999999999999, 99.44999999999999, 99.455, 99.455, 99.455,
        99.455, 99.455, 99.455, 99.455, 99.455, 99.455, 99.46000000000001, 99.5,
        99.5, 99.515, 99.52000000000001, 99.52000000000001, 99.525, 99.52000000000001, 99.52000000000001,
        99.52000000000001, 99.525, 99.53, 99.53, 99.53, 99.53, 99.53999999999999, 99.545, 99.545, 99.545, 99.545,
        99.545, 99.545, 99.545, 99.545, 99.545, 99.545, 99.545, 99.535, 99.495, 99.49000000000001, 99.49000000000001,
        99.495, 99.495,
        99.495, 99.495, 99.495, 99.495, 99.495, 99.495, 99.495, 99.535, 99.53, 99.53, 99.52000000000001, 99.525, 99.525,
        99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56, 99.56,
        99.56, 99.56,
        99.56, 99.56, 99.56, 99.53, 99.53, 99.53, 99.525, 99.53, 99.535, 99.53999999999999, 99.53999999999999,
        99.53999999999999, 99.53999999999999, 99.53999999999999, 99.53999999999999, 99.53999999999999,
        99.53999999999999, 99.53999999999999, 99.535, 99.535, 99.53999999999999, 99.53999999999999, 99.53999999999999,
        99.53999999999999, 99.53999999999999, 99.53999999999999, 99.53999999999999, 99.535, 99.5, 99.525, 99.525,
        99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.525, 99.56,
        99.555, 99.555, 99.555, 99.555, 99.555, 99.555, 99.555, 99.555, 99.525, 99.49000000000001, 99.49000000000001,
        99.49000000000001, 99.49000000000001, 99.475, 99.475, 99.475, 99.475,
        99.475, 99.475, 99.435, 99.43, 99.435, 99.42, 99.42, 99.41499999999999, 99.425, 99.415, 99.41, 99.41, 99.455,
        99.45, 99.445, 99.445, 99.445, 99.44, 99.44, 99.435, 99.435, 99.435, 99.43, 99.43, 99.43, 99.43, 99.43, 99.43,
        99.43, 99.43, 99.43,
        99.43, 99.43, 99.43, 99.43, 99.43, 99.43, 99.43, 99.43, 99.4, 99.4, 99.4, 99.39500000000001, 99.39500000000001,
        99.39500000000001, 99.39500000000001, 99.39500000000001, 99.39500000000001, 99.39500000000001,
        99.39500000000001, 99.39500000000001, 99.39500000000001, 99.395, 99.39, 99.39, 99.39, 99.42, 99.42, 99.42,
        99.42, 99.42, 99.42,
        99.42, 99.42, 99.42, 99.42, 99.42, 99.37, 99.375, 99.375, 99.405, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4,
        99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.4, 99.39500000000001, 99.4, 99.39500000000001,
        99.39500000000001, 99.39500000000001,
        99.39500000000001, 99.39, 99.39, 99.39, 99.39, 99.375, 99.375, 99.375, 99.36, 99.36, 99.36, 99.36, 99.36, 99.36,
        99.35499999999999, 99.35499999999999, 99.34, 99.34, 99.33500000000001, 99.33, 99.33, 99.33, 99.33, 99.33, 99.33,
        99.33, 99.325, 99.325, 99.33, 99.33, 99.33,
        99.33, 99.33, 99.33, 99.33, 99.33, 99.33, 99.33, 99.3, 99.3, 99.25999999999999, 99.305, 99.31, 99.295, 99.295,
        99.295, 99.295, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999,
        99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999,
        99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999,
        99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999,
        99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999,
        99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.28999999999999, 99.255, 99.25,
        99.25, 99.25, 99.25, 99.25, 99.25, 99.25, 99.25, 99.25, 99.225, 99.22999999999999, 99.25, 99.25, 99.27,
        99.28999999999999,
        99.28999999999999, 99.29499999999999, 99.29499999999999, 99.3, 99.285, 99.285, 99.265, 99.265, 99.265, 99.265,
        99.265, 99.24, 99.235, 99.235, 99.235, 99.245, 99.25, 99.25, 99.25, 99.25, 99.245, 99.225, 99.225, 99.225,
        99.225, 99.22, 99.22, 99.22, 99.22, 99.22, 99.22,
        99.22, 99.195, 99.195, 99.195, 99.195, 99.195, 99.195, 99.19, 99.195, 99.195, 99.2, 99.2, 99.2, 99.2, 99.2,
        99.2, 99.195, 99.195, 99.17500000000001, 99.17500000000001, 99.17500000000001, 99.17500000000001,
        99.17500000000001, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18,
        99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.18, 99.165,
        99.13, 99.13, 99.12, 99.12, 99.12, 99.075, 99.075, 99.075, 99.075, 99.095, 99.09, 99.095, 99.07499999999999,
        99.07, 99.07,
        99.07, 99.07, 99.07, 99.07, 99.07, 99.07, 99.07499999999999, 99.07499999999999, 99.07499999999999,
        99.07499999999999, 99.08, 99.08, 99.07499999999999, 99.07, 99.07, 99.07, 99.095, 99.1, 99.1, 99.13, 99.13,
        99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13,
        99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.13, 99.125, 99.125,
        99.125, 99.08500000000001, 99.08500000000001, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09,
        99.09, 99.08500000000001, 99.08500000000001, 99.08500000000001,
        99.08500000000001, 99.08500000000001, 99.09, 99.09, 99.09, 99.1, 99.1, 99.1, 99.1, 99.1, 99.1, 99.1, 99.1, 99.1,
        99.1, 99.1, 99.1, 99.09, 99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001,
        99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001,
        99.08500000000001, 99.08500000000001, 99.08500000000001, 99.09,
        99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.06, 99.06, 99.07499999999999, 99.07499999999999, 99.07499999999999,
        99.07499999999999, 99.07, 99.065, 99.065, 99.065, 99.07, 99.07, 99.07, 99.07, 99.07, 99.07, 99.07, 99.07, 99.07,
        99.07, 99.07, 99.07499999999999, 99.08500000000001, 99.08500000000001, 99.09,
        99.09, 99.09, 99.09, 99.08500000000001, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09,
        99.10499999999999, 99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001,
        99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001,
        99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001, 99.08500000000001,
        99.08500000000001, 99.08,
        99.08500000000001, 99.08, 99.08, 99.08, 99.08, 99.08, 99.08500000000001, 99.08500000000001, 99.08500000000001,
        99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.09, 99.11, 99.11, 99.11, 99.11,
        99.11, 99.11, 99.11, 99.11, 99.11, 99.11]

Count = len(data)

df = pd.DataFrame(np.array(data))
# Establish the Training and Testing Data
TrainingSize = int(Count * .7)
TrainingData2 = data[0:TrainingSize]
TestData2 = data[TrainingSize:Count]
TrainingData = df[0:TrainingSize]
TestData = df[TrainingSize:Count]

TrainingData.plot(figsize=(15, 8))
TestData.plot(figsize=(15, 8))
plt.show()


# #NSimpleExpSmoothing
# y_hat = TestData.copy()
# fit = SimpleExpSmoothing(np.asarray(TrainingData)).fit(smoothing_level=0.6)
# y_hat['SES'] = fit.forecast(len(TestData))
# plt.figure(figsize=(16,8))
# plt.plot(TrainingData, label='Train')
# plt.plot(TestData, label='Test')
# plt.plot(y_hat['SES'], label='SES')
# plt.legend(loc='best')
# plt.show()

# rms = math.sqrt(mean_squared_error(TestData, y_hat['SES']))
# print(rms)


# fit2 = Holt(np.asarray(TrainingData)).fit(smoothing_level = 0.3,smoothing_slope = 0.1)
# y_hat['Holt_linear'] = fit1.forecast(len(TestData))
# plt.figure(figsize=(16,8))
# plt.plot(TrainingData, label='Train')
# plt.plot(TestData, label='Test')
# plt.plot(y_hat['Holt_linear'], label='Holt_linear')
# plt.legend(loc='best')
# plt.show()

# rms = math.sqrt(mean_squared_error(TestData, y_hat['Holt_linear']))
# print(rms)


# fit3 = ExponentialSmoothing(np.asarray(TrainingData) ,seasonal_periods=7 ,trend='add', seasonal='add',).fit()
# y_hat['Holt_Winter'] = fit3.forecast(len(TestData))
# plt.figure(figsize=(16,8))
# plt.plot(TrainingData, label='Train')
# plt.plot(TestData, label='Test')
# plt.plot(y_hat['Holt_Winter'], label='Holt_Winter')
# plt.legend(loc='best')
# plt.show()

# rms = math.sqrt(mean_squared_error(TestData, y_hat['Holt_Winter']))
# print(rms)


# fit4 = sm.tsa.statespace.SARIMAX(TrainingData, order=(2, 1, 4),seasonal_order=(0,1,1,7)).fit()
# y_hat['SARIMA'] = fit4.forecast(len(TestData))
# plt.figure(figsize=(16,8))
# plt.plot( TrainingData, label='Train')
# plt.plot(TestData, label='Test')
# plt.plot(y_hat['SARIMA'], label='SARIMA')
# plt.legend(loc='best')
# plt.show()

# rms = math.sqrt(mean_squared_error(TestData, y_hat['SARIMA']))
# print(rms)

def StartARIMAForecasting(Actual, P=1, D=1, Q=1):
    model = ARIMA(Actual, order=(P, D, Q))
    model_fit = model.fit(disp=0)
    prediction = model_fit.forecast()[0]
    return prediction


Actual = [x for x in TrainingData2]
Predictions = list()

for timepoint in range(len(TestData)):
    ActualVal = TestData2[timepoint]
    Prediction = StartARIMAForecasting(Actual)
    # print(ActualVal,Prediction)
    Predictions.append(Prediction)
    Actual.append(ActualVal)

mse = mean_squared_error(TestData, Predictions)

plt.figure(figsize=(16, 8))
plt.plot(TrainingData, label='Train')
plt.plot(TestData, label='Test')
plt.plot(Predictions, label='1,1,1')
plt.legend(loc='best')
plt.show()

# pyplot.plot(TestData, color = 'green')
# pyplot.plot(Predictions, color = 'red')
print(mse)

# Actual2 = [x for x in TrainingData2]
# Predictions2 = list()

# for timepoint in range(len(TestData)):
#     ActualVal = TestData2[timepoint]
#     Prediction = StartARIMAForecasting(Actual, 3, 1, 0)
#     #print(ActualVal,Prediction)
#     Predictions2.append(Prediction)
#     Actual2.append(ActualVal)

# mse2 = mean_squared_error(TestData, Predictions2)

# plt.figure(figsize=(16,8))
# plt.plot( TrainingData, label='Train')
# plt.plot(TestData, label='Test')
# plt.plot(Predictions2, label='3,1,0')
# plt.legend(loc='best')
# plt.show()

# # pyplot.plot(TestData, color = 'green')
# # pyplot.plot(Predictions2, color = 'red')
# print(mse2)

# df = pd.DataFrame(np.array(data))
# df.plot()
